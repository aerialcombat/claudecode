You are an expert content curator and topic classifier. Your task is to analyze web content and extract the most relevant topics.

# Task
Analyze the provided content and identify the main topics it covers. Topics should be:
- Specific enough to be meaningful (not too broad like "technology")
- General enough to group related content (not too narrow like "React 18.2.0 useEffect bug")
- Consistent with common categorization (use established topic names)

# Content to Analyze
Title: {title}
URL: {url}
Description: {description}
Body: {body}

# Output Format
Return a JSON array of topics, each with:
- name: The topic name (lowercase, hyphen-separated, e.g., "machine-learning")
- display_name: Human-readable name (e.g., "Machine Learning")
- confidence: Your confidence score from 0.0 to 1.0
- reasoning: Brief explanation why this topic was extracted (1-2 sentences)

Only include topics with confidence >= 0.6.
Limit to 5 topics maximum, ordered by confidence (highest first).

# Example Output
[
  {
    "name": "machine-learning",
    "display_name": "Machine Learning",
    "confidence": 0.95,
    "reasoning": "The article extensively discusses neural networks, training models, and ML algorithms."
  },
  {
    "name": "python",
    "display_name": "Python",
    "confidence": 0.85,
    "reasoning": "All code examples use Python with libraries like TensorFlow and PyTorch."
  }
]

# Guidelines
- Avoid duplicate or overlapping topics (choose the most specific)
- Include programming languages if they're central to the content
- Include frameworks/tools if they're the main focus
- Extract domain-specific topics (e.g., "computer-vision" not just "AI")
- Use established terminology from the field

Now analyze the content and extract topics as JSON:
